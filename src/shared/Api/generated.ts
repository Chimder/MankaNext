/**
 * Generated by orval v6.21.0 üç∫
 * Do not edit manually.
 * Block List
 * OpenAPI spec version: 1.0.0
 */
import { customInstance } from './axios.instance';
import type { BodyType } from './axios.instance';
export type UserControllerAddFavoriteParams = {
email: string;
name: string;
};

export type AnimeControllerGetUserFavoriteParams = {
email: string;
};

export type AnimeControllerGetAnimeByGenresParams = {
genres: string[];
name: string;
status: string;
orderField: string;
orderDirection: string;
};

export type AnimeControllerGetAnimeByNameParams = {
name: string;
};

export interface UserDto {
  email: string;
  id: string;
  image: string;
  name: string;
}

export interface Chapter {
  animeName: string;
  chapter: number;
  img: string[];
  name: string;
}

export interface AnimeDto {
  author: string;
  chapters: Chapter[];
  describe: string;
  genres: string[];
  img: string;
  imgHeader: string;
  name: string;
  published: string;
  status: string;
}




// eslint-disable-next-line
  type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;


  export const animeControllerGetAllAnime = (
    
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<AnimeDto[]>(
      {url: `/anime/get-all`, method: 'GET'
    },
      options);
    }
  
export const animeControllerGetAnimeByName = (
    params: AnimeControllerGetAnimeByNameParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<AnimeDto>(
      {url: `/anime/get-one`, method: 'GET',
        params
    },
      options);
    }
  
export const animeControllerGetAnimeByGenres = (
    params: AnimeControllerGetAnimeByGenresParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<AnimeDto[]>(
      {url: `/anime/get-by-filters`, method: 'GET',
        params
    },
      options);
    }
  
export const animeControllerCreateAnime = (
    animeDto: BodyType<AnimeDto>,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/anime/create`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: animeDto
    },
      options);
    }
  
export const animeControllerGetUserFavorite = (
    params: AnimeControllerGetUserFavoriteParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<AnimeDto[]>(
      {url: `/anime/userFavorite`, method: 'GET',
        params
    },
      options);
    }
  
export const userControllerRegNewUser = (
    userDto: BodyType<UserDto>,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/user/checkOrCreate`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: userDto
    },
      options);
    }
  
export const userControllerAddFavorite = (
    params: UserControllerAddFavoriteParams,
 options?: SecondParameter<typeof customInstance>,) => {
      return customInstance<void>(
      {url: `/user/addFavorite`, method: 'POST',
        params
    },
      options);
    }
  
export type AnimeControllerGetAllAnimeResult = NonNullable<Awaited<ReturnType<typeof animeControllerGetAllAnime>>>
export type AnimeControllerGetAnimeByNameResult = NonNullable<Awaited<ReturnType<typeof animeControllerGetAnimeByName>>>
export type AnimeControllerGetAnimeByGenresResult = NonNullable<Awaited<ReturnType<typeof animeControllerGetAnimeByGenres>>>
export type AnimeControllerCreateAnimeResult = NonNullable<Awaited<ReturnType<typeof animeControllerCreateAnime>>>
export type AnimeControllerGetUserFavoriteResult = NonNullable<Awaited<ReturnType<typeof animeControllerGetUserFavorite>>>
export type UserControllerRegNewUserResult = NonNullable<Awaited<ReturnType<typeof userControllerRegNewUser>>>
export type UserControllerAddFavoriteResult = NonNullable<Awaited<ReturnType<typeof userControllerAddFavorite>>>
